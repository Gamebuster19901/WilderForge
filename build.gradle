buildscript {
	dependencies {
		classpath group: 'commons-io', name: 'commons-io', version: commonsIOVersion
		classpath files('libs/wilderworkspace-4.0.0.0.jar')
	}
	repositories {
		mavenCentral()
	}
}


plugins {
	id 'java-library'
	id 'eclipse'
}
apply plugin: 'com.wildermods.workspace'

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url "https://maven.fabricmc.net/"
	}
}

sourceCompatibility = '17'
targetCompatibility = '17'

version = wilderForgeVersion
group = "com.wildermods"
archivesBaseName = "wilderforge"

dependencies {

	implementation group: 'net.oneandone.reflections8', name: 'reflections8', version: '0.11.7'
	implementation group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '6.0-alpha-3'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.16.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.23.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.23.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.23.1'
	
	/**********
	don't alter the dependencies below
	***********/
	
	//Wildermyth, Scratchpad
	compileOnly fileTree(dir: './bin/', include: ['*.jar'])
	
	//All dependencies of Wildermyth itself
	compileOnly fileTree(dir: './bin/lib/', include: ['*.jar'])
}

/*
shadowJar {
	mergeServiceFiles()
	configurations = [project.configurations.shadow]
	exclude 'META-INF/LICENSE'
	exclude 'META-INF/LICENSE.txt'
	exclude 'META-INF/LICENSsE.txt'
	exclude 'META-INF/NOTICE'
	exclude 'META-INF/NOTICE.txt'
	exclude 'META-INF/DEPENDENCIES'
	exclude 'LICENSE.txt'
}
*/

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
	filesMatching('mod.json') {
		expand "WILDERFORGE_VERSION": project.version
	}
}

jar {
	manifest {
		attributes(
			'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
			'MixinConfigs': 'mixins.json',
			'Main-Class': 'net.fabricmc.loader.impl.launch.knot.KnotClient',
			'Specification-Version': 8.0,
			'Multi-Release': 'true'
		)
	}
}

//build.finalizedBy shadowJar
